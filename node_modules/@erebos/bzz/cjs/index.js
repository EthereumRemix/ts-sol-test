"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
var _exportNames = {
  BZZ_MODE_PROTOCOLS: true,
  getModeProtocol: true,
  Bzz: true
};
exports.getModeProtocol = getModeProtocol;
exports.Bzz = exports.BZZ_MODE_PROTOCOLS = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _http = require("./http");

Object.keys(_http).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _http[key];
});

var _utils = require("./utils");

Object.keys(_utils).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _utils[key];
});

var _types = require("./types");

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  exports[key] = _types[key];
});
var BZZ_MODE_PROTOCOLS = {
  default: 'bzz:/',
  feed: 'bzz-feed:/',
  feedRaw: 'bzz-feed-raw:/',
  immutable: 'bzz-immutable:/',
  pin: 'bzz-pin:/',
  raw: 'bzz-raw:/',
  tag: 'bzz-tag:/'
};
exports.BZZ_MODE_PROTOCOLS = BZZ_MODE_PROTOCOLS;

function getModeProtocol(mode) {
  return mode && BZZ_MODE_PROTOCOLS[mode] || BZZ_MODE_PROTOCOLS.default;
}

var Bzz =
/*#__PURE__*/
function () {
  function Bzz(config) {
    (0, _defineProperty2.default)(this, "defaultTimeout", void 0);
    (0, _defineProperty2.default)(this, "fetch", void 0);
    (0, _defineProperty2.default)(this, "url", void 0);
    var fetch = config.fetch,
        timeout = config.timeout,
        url = config.url;
    this.fetch = fetch != null ? fetch : (0, _utils.getGlobalFetch)();
    this.defaultTimeout = timeout != null ? timeout : 0;
    this.url = url.endsWith('/') ? url : url + "/";
  }

  var _proto = Bzz.prototype;

  _proto.fetchTimeout = function fetchTimeout(url, options, params) {
    var _options$timeout,
        _this = this;

    if (params === void 0) {
      params = {};
    }

    var timeout = (_options$timeout = options.timeout) != null ? _options$timeout : this.defaultTimeout;

    if (options.headers != null) {
      params.headers = options.headers;
    }

    if (timeout === 0) {
      // No timeout
      return this.fetch(url, params);
    }

    return new Promise(function (resolve, reject) {
      var timeoutID = setTimeout(function () {
        reject(new Error('Timeout'));
      }, timeout);

      _this.fetch(url, params).then(function (res) {
        clearTimeout(timeoutID);
        resolve(res);
      });
    });
  };

  _proto.getDownloadURL = function getDownloadURL(hash, options, raw) {
    if (options === void 0) {
      options = {};
    }

    if (raw === void 0) {
      raw = false;
    }

    var protocol = raw ? BZZ_MODE_PROTOCOLS.raw : getModeProtocol(options.mode);
    var url = "" + this.url + protocol + hash + "/";

    if (options.path != null) {
      url += options.path;
    }

    if (options.mode === 'raw' && options.contentType != null) {
      url += "?content_type=" + options.contentType;
    }

    return url;
  };

  _proto.getUploadURL = function getUploadURL(options, raw) {
    if (options === void 0) {
      options = {};
    }

    if (raw === void 0) {
      raw = false;
    }

    // Default URL to creation
    var url = this.url + BZZ_MODE_PROTOCOLS[raw ? 'raw' : 'default']; // Manifest update if hash is provided

    if (options.manifestHash != null) {
      url += options.manifestHash + "/";

      if (options.path != null) {
        url += options.path;
      }
    }

    if (options.defaultPath != null) {
      url += "?defaultpath=" + options.defaultPath;
    }

    return url;
  };

  _proto.getPinURL = function getPinURL(hash, raw) {
    if (raw === void 0) {
      raw = false;
    }

    var url = this.url + BZZ_MODE_PROTOCOLS.pin;

    if (hash != null) {
      url += hash;
    }

    if (raw) {
      url += '/?raw=true';
    }

    return url;
  };

  _proto.hash =
  /*#__PURE__*/
  function () {
    var _hash = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee(domain, options) {
      var res;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              _context.next = 3;
              return this.fetchTimeout(this.url + "bzz-hash:/" + domain, options);

            case 3:
              res = _context.sent;
              _context.next = 6;
              return (0, _http.resText)(res);

            case 6:
              return _context.abrupt("return", _context.sent);

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    function hash(_x, _x2) {
      return _hash.apply(this, arguments);
    }

    return hash;
  }();

  _proto.list =
  /*#__PURE__*/
  function () {
    var _list = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee2(hash, options) {
      var url, res;
      return _regenerator.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              url = this.url + "bzz-list:/" + hash + "/";

              if (options.path != null) {
                url += options.path;
              }

              _context2.next = 5;
              return this.fetchTimeout(url, options);

            case 5:
              res = _context2.sent;
              _context2.next = 8;
              return (0, _http.resJSON)(res);

            case 8:
              return _context2.abrupt("return", _context2.sent);

            case 9:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    function list(_x3, _x4) {
      return _list.apply(this, arguments);
    }

    return list;
  }();

  _proto.download =
  /*#__PURE__*/
  function () {
    var _download = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee3(hash, options) {
      var url, res;
      return _regenerator.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              url = this.getDownloadURL(hash, options);
              _context3.next = 4;
              return this.fetchTimeout(url, options);

            case 4:
              res = _context3.sent;
              return _context3.abrupt("return", (0, _http.resOrError)(res));

            case 6:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, this);
    }));

    function download(_x5, _x6) {
      return _download.apply(this, arguments);
    }

    return download;
  }();

  _proto.downloadData =
  /*#__PURE__*/
  function () {
    var _downloadData = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee4(hash, options) {
      var url, res;
      return _regenerator.default.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              url = this.getDownloadURL(hash, (0, _extends2.default)({}, options, {
                mode: 'raw'
              }));
              _context4.next = 4;
              return this.fetchTimeout(url, options);

            case 4:
              res = _context4.sent;
              _context4.next = 7;
              return (0, _http.resJSON)(res);

            case 7:
              return _context4.abrupt("return", _context4.sent);

            case 8:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4, this);
    }));

    function downloadData(_x7, _x8) {
      return _downloadData.apply(this, arguments);
    }

    return downloadData;
  }();

  _proto.downloadTar =
  /*#__PURE__*/
  function () {
    var _downloadTar = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee5(hash, options) {
      return _regenerator.default.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              if (options.headers == null) {
                options.headers = {};
              }

              options.headers.accept = 'application/x-tar';
              _context5.next = 4;
              return this.download(hash, options);

            case 4:
              return _context5.abrupt("return", _context5.sent);

            case 5:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, this);
    }));

    function downloadTar(_x9, _x10) {
      return _downloadTar.apply(this, arguments);
    }

    return downloadTar;
  }();

  _proto.uploadBody =
  /*#__PURE__*/
  function () {
    var _uploadBody = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee6(body, options, raw) {
      var url, res;
      return _regenerator.default.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              if (raw === void 0) {
                raw = false;
              }

              url = this.getUploadURL(options, raw);
              _context6.next = 4;
              return this.fetchTimeout(url, options, {
                body: body,
                method: 'POST'
              });

            case 4:
              res = _context6.sent;
              _context6.next = 7;
              return (0, _http.resText)(res);

            case 7:
              return _context6.abrupt("return", _context6.sent);

            case 8:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, this);
    }));

    function uploadBody(_x11, _x12, _x13) {
      return _uploadBody.apply(this, arguments);
    }

    return uploadBody;
  }();

  _proto.uploadFile =
  /*#__PURE__*/
  function () {
    var _uploadFile = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee7(data, options) {
      var body, raw;
      return _regenerator.default.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              body = typeof data === 'string' ? Buffer.from(data) : data;
              raw = options.contentType == null;

              if (options.headers == null) {
                options.headers = {};
              }

              if (options.size != null) {
                options.headers['content-length'] = options.size;
              } else if (Buffer.isBuffer(body)) {
                options.headers['content-length'] = body.length;
              }

              if (options.headers['content-type'] == null && !raw) {
                options.headers['content-type'] = options.contentType;
              }

              if (options.pin) {
                options.headers['x-swarm-pin'] = true;
              }

              _context7.next = 9;
              return this.uploadBody(body, options, raw);

            case 9:
              return _context7.abrupt("return", _context7.sent);

            case 10:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7, this);
    }));

    function uploadFile(_x14, _x15) {
      return _uploadFile.apply(this, arguments);
    }

    return uploadFile;
  }();

  _proto.uploadData =
  /*#__PURE__*/
  function () {
    var _uploadData = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee8(data, options) {
      return _regenerator.default.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              _context8.next = 3;
              return this.uploadFile(JSON.stringify(data), options);

            case 3:
              return _context8.abrupt("return", _context8.sent);

            case 4:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8, this);
    }));

    function uploadData(_x16, _x17) {
      return _uploadData.apply(this, arguments);
    }

    return uploadData;
  }();

  _proto.deleteResource =
  /*#__PURE__*/
  function () {
    var _deleteResource = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee9(hash, path, options) {
      var url, res;
      return _regenerator.default.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              url = this.getUploadURL({
                manifestHash: hash,
                path: path
              });
              _context9.next = 4;
              return this.fetchTimeout(url, options, {
                method: 'DELETE'
              });

            case 4:
              res = _context9.sent;
              _context9.next = 7;
              return (0, _http.resText)(res);

            case 7:
              return _context9.abrupt("return", _context9.sent);

            case 8:
            case "end":
              return _context9.stop();
          }
        }
      }, _callee9, this);
    }));

    function deleteResource(_x18, _x19, _x20) {
      return _deleteResource.apply(this, arguments);
    }

    return deleteResource;
  }();

  _proto.pinEnabled =
  /*#__PURE__*/
  function () {
    var _pinEnabled = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee10(options) {
      var res;
      return _regenerator.default.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              _context10.next = 3;
              return this.fetchTimeout(this.getPinURL(), options);

            case 3:
              res = _context10.sent;
              return _context10.abrupt("return", res.ok);

            case 5:
            case "end":
              return _context10.stop();
          }
        }
      }, _callee10, this);
    }));

    function pinEnabled(_x21) {
      return _pinEnabled.apply(this, arguments);
    }

    return pinEnabled;
  }();

  _proto.pin =
  /*#__PURE__*/
  function () {
    var _pin = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee11(hash, options) {
      var url, res;
      return _regenerator.default.wrap(function _callee11$(_context11) {
        while (1) {
          switch (_context11.prev = _context11.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              if (!options.download) {
                _context11.next = 4;
                break;
              }

              _context11.next = 4;
              return this.download(hash, {
                mode: options.raw ? 'raw' : 'default'
              });

            case 4:
              url = this.getPinURL(hash, options.raw);
              _context11.next = 7;
              return this.fetchTimeout(url, options, {
                method: 'POST'
              });

            case 7:
              res = _context11.sent;
              (0, _http.resOrError)(res);

            case 9:
            case "end":
              return _context11.stop();
          }
        }
      }, _callee11, this);
    }));

    function pin(_x22, _x23) {
      return _pin.apply(this, arguments);
    }

    return pin;
  }();

  _proto.unpin =
  /*#__PURE__*/
  function () {
    var _unpin = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee12(hash, options) {
      var res;
      return _regenerator.default.wrap(function _callee12$(_context12) {
        while (1) {
          switch (_context12.prev = _context12.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              _context12.next = 3;
              return this.fetchTimeout(this.getPinURL(hash), options, {
                method: 'DELETE'
              });

            case 3:
              res = _context12.sent;
              (0, _http.resOrError)(res);

            case 5:
            case "end":
              return _context12.stop();
          }
        }
      }, _callee12, this);
    }));

    function unpin(_x24, _x25) {
      return _unpin.apply(this, arguments);
    }

    return unpin;
  }();

  _proto.pins =
  /*#__PURE__*/
  function () {
    var _pins = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee13(options) {
      var res, pins;
      return _regenerator.default.wrap(function _callee13$(_context13) {
        while (1) {
          switch (_context13.prev = _context13.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              _context13.next = 3;
              return this.fetchTimeout(this.getPinURL(), options);

            case 3:
              res = _context13.sent;
              _context13.next = 6;
              return (0, _http.resJSON)(res);

            case 6:
              pins = _context13.sent;
              return _context13.abrupt("return", pins.map(_utils.formatPinnedFile));

            case 8:
            case "end":
              return _context13.stop();
          }
        }
      }, _callee13, this);
    }));

    function pins(_x26) {
      return _pins.apply(this, arguments);
    }

    return pins;
  }();

  _proto.getTag =
  /*#__PURE__*/
  function () {
    var _getTag = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee14(hash, options) {
      var res, tag;
      return _regenerator.default.wrap(function _callee14$(_context14) {
        while (1) {
          switch (_context14.prev = _context14.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              _context14.next = 3;
              return this.fetchTimeout(this.url + BZZ_MODE_PROTOCOLS.tag + hash, options);

            case 3:
              res = _context14.sent;
              _context14.next = 6;
              return (0, _http.resJSON)(res);

            case 6:
              tag = _context14.sent;
              return _context14.abrupt("return", (0, _utils.formatTag)(tag));

            case 8:
            case "end":
              return _context14.stop();
          }
        }
      }, _callee14, this);
    }));

    function getTag(_x27, _x28) {
      return _getTag.apply(this, arguments);
    }

    return getTag;
  }();

  return Bzz;
}();

exports.Bzz = Bzz;