import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import _wrapNativeSuper from "@babel/runtime/helpers/esm/wrapNativeSuper";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { toSwarmHash } from './utils';
export var HTTPError =
/*#__PURE__*/
function (_Error) {
  _inheritsLoose(HTTPError, _Error);

  function HTTPError(status, message) {
    var _this;

    _this = _Error.call(this, message) || this;

    _defineProperty(_assertThisInitialized(_this), "status", void 0);

    _this.status = status;
    return _this;
  }

  return HTTPError;
}(_wrapNativeSuper(Error));
export function resOrError(_x) {
  return _resOrError.apply(this, arguments);
}

function _resOrError() {
  _resOrError = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee(res) {
    var messageMatches;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!res.ok) {
              _context.next = 2;
              break;
            }

            return _context.abrupt("return", res);

          case 2:
            _context.t0 = /Message: (.*)$/m;
            _context.next = 5;
            return res.text();

          case 5:
            _context.t1 = _context.sent;
            messageMatches = _context.t0.exec.call(_context.t0, _context.t1);

            if (!(messageMatches && messageMatches.length === 2)) {
              _context.next = 11;
              break;
            }

            throw new HTTPError(res.status, messageMatches[1]);

          case 11:
            throw new HTTPError(res.status, res.statusText);

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _resOrError.apply(this, arguments);
}

export function resJSON(_x2) {
  return _resJSON.apply(this, arguments);
}

function _resJSON() {
  _resJSON = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee2(res) {
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return resOrError(res);

          case 2:
            return _context2.abrupt("return", _context2.sent.json());

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _resJSON.apply(this, arguments);
}

export function resText(_x3) {
  return _resText.apply(this, arguments);
}

function _resText() {
  _resText = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee3(res) {
    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return resOrError(res);

          case 2:
            return _context3.abrupt("return", _context3.sent.text());

          case 3:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _resText.apply(this, arguments);
}

export function resArrayBuffer(_x4) {
  return _resArrayBuffer.apply(this, arguments);
}

function _resArrayBuffer() {
  _resArrayBuffer = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee4(res) {
    return _regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return resOrError(res);

          case 2:
            return _context4.abrupt("return", _context4.sent.arrayBuffer());

          case 3:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _resArrayBuffer.apply(this, arguments);
}

export function resSwarmHash(_x5) {
  return _resSwarmHash.apply(this, arguments);
}

function _resSwarmHash() {
  _resSwarmHash = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee5(res) {
    var bytes;
    return _regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return resArrayBuffer(res);

          case 2:
            bytes = _context5.sent;
            return _context5.abrupt("return", toSwarmHash(bytes));

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _resSwarmHash.apply(this, arguments);
}